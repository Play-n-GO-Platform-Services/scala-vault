#!/bin/bash

set -euo pipefail

NAME='vault-dev'
VERSION='0.6.5'
ROOT_TOKEN='vault-root-token'

type 'curl' > /dev/null || error "No 'curl' found on system."
type 'docker' > /dev/null || error "No 'docker' found on system."
type 'jq' > /dev/null || error "No 'jq' found on system."

if [ "$(docker ps -qa -f name=$NAME)" ]; then
    docker rm -f $NAME
fi

docker run -d --name=$NAME \
    --cap-add=IPC_LOCK \
    -e "VAULT_DEV_ROOT_TOKEN_ID=$ROOT_TOKEN" \
    -e "VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200" \
    -p 8200:8200 vault:$VERSION

echo $ROOT_TOKEN > /tmp/.root-token

# wait for vault to start
sleep 10

curl -X POST -H "X-Vault-Token:$ROOT_TOKEN" \
    -d '{"type":"approle"}' http://127.0.0.1:8200/v1/sys/auth/approle

curl -X PUT -H "X-Vault-Token:$ROOT_TOKEN" \
    -d '{"rules":"path \"*\" {\n  capabilities = [\"create\",\"read\",\"update\",\"delete\",\"list\",\"sudo\"]\n}"}' \
    http://127.0.0.1:8200/v1/sys/policy/test-policy

curl -X POST -H "X-Vault-Token:$ROOT_TOKEN" \
    -d '{"policies":"default,test-policy"}' http://127.0.0.1:8200/v1/auth/approle/role/test-role

curl -X GET -H "X-Vault-Token:$ROOT_TOKEN" \
    http://127.0.0.1:8200/v1/auth/approle/role/test-role/role-id \
    | jq -r '.data.role_id' > /tmp/.role-id

curl -X POST -H "X-Vault-Token:$ROOT_TOKEN" \
    http://127.0.0.1:8200/v1/auth/approle/role/test-role/secret-id \
    | jq -r '.data.secret_id' > /tmp/.secret-id
